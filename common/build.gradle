apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner
        consumerProguardFiles rootProject.ext.android.consumerProguardFiles

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    // 需要 Android Gradle Plugin 3.6.0
//    viewBinding {
//        enabled = true
//    }

    // Android Studio 4.0
    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.androidx_junit
    androidTestImplementation rootProject.ext.dependencies.androidx_espresso_core
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'com.android.support:appcompat-v7:29.0.0'
    // 生命周期
    api 'android.arch.lifecycle:runtime:1.1.1'
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor rootProject.ext.dependencies.lifecycle
    api 'android.arch.lifecycle:extensions:1.1.1'
    // 网络库
    api 'com.squareup.retrofit2:retrofit:2.8.1' // 导入retrofit
    api 'com.google.code.gson:gson:2.8.6' //Gson 库

    // RxJava 和 RxAndroid
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api 'io.reactivex.rxjava2:rxjava:2.2.8'
    api 'com.squareup.retrofit2:converter-gson:2.8.1' // 转换器，请求结果转换成Model
    api 'com.squareup.retrofit2:adapter-rxjava2:2.5.0' // 配合Rxjava 使用

    // 屏幕适配
    api 'me.jessyan:autosize:1.1.2'

    // kotlin
    api "androidx.core:core-ktx:1.2.0"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // websocket
    api 'org.java-websocket:Java-WebSocket:1.3.8'

    // 阿里路由
    api 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor rootProject.ext.dependencies.arouter_compiler

    // log日志
    api 'de.mindpipe.android:android-logging-log4j:1.0.3'
    api 'log4j:log4j:1.2.17'
    // 权限获取
    api 'com.github.tbruyelle:rxpermissions:0.10.2'
    // 图片
    api 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor rootProject.ext.dependencies.glide_compiler
    api 'jp.wasabeef:glide-transformations:4.1.0'
    // Room
    api 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor rootProject.ext.dependencies.room_compiler
}
repositories {
    mavenCentral()
}
